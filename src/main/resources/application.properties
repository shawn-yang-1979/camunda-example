spring.application.name=@project.artifactId@-@project.version@

# H2 configuration
#
# Automatic Mixed Mode - AUTO_SERVER=true
# Multiple processes can access the same database without having to start the server manually. 
# when using this mode, the first connection to the database is made in embedded mode, and additionally a server is 
# started internally (as a daemon thread). If the database is already open in another process, the server mode is used 
# automatically.
# Source: http://www.h2database.com/html/features.html#auto_mixed_mode
spring.datasource.url=jdbc:h2:file:~/db/demo;AUTO_SERVER=true
# By default, the username will be sa and password will be empty
# But the h2 console can't connect to the database with an empty password, so we will need to specify the password here.
# When the database is not existed, spring will create a new database with the username and password specified.
spring.datasource.username=demo
spring.datasource.password=demo
# This will enable an H2 console so that you can check your database data through the http://localhost:${server.port}/h2-console
spring.h2.console.enabled=true

# JPA configuration
#
# Will update table schema automatically when entities changed.
spring.jpa.hibernate.ddl-auto=update
# Do not open entity manager in view layer.
# Opening entity manager in view layer is fine for traditional MVC web but not proper for microservices. 
spring.jpa.open-in-view=false

# Error response configuration
#
# This will show message in the response when error out.
# Otherwise, only standard HTTP errors will display.
server.error.include-message=always
# This will show detail errors when the input validation fail.
server.error.include-binding-errors=always

# Camunda configuration
camunda.bpm.admin-user.id=demo
camunda.bpm.admin-user.password=demo